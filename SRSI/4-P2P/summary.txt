Peer to Peer Networks.

Overlay networks:
-Logical networks implemented on top of the physical networks. They can be split into individual logic networks;
-Only some nodes of the physical network belong in an overlay network;
-Implemented at application level;

Overlay tunnels, the overlay packets are encapsulated (stored within) the physical packets. Nodes have access to both the overlay address as well as the physical address of the packet. 

P2P Overlay networks (5 key aspects):
- Self organize into network topologies;
- Allow the sharing of resources;
- Adapt to failures;
- Accomodate nodes entering and leaving the network;
- Does not require a global centralized server;

Structured P2P Networks:
- Controlled topology and content placement;
- Search uses DHT for probabilistic search delay bounds for rare content, but content is moved when a peer joins or leaves network;
- Used in controlled environments like a CDN or a data center;

DHT:
- Has a more efficicent insert and lookup than other data structure (some insertions and deletions are done in constant time);

Chord search:

Similar to consistent hashing, objects and nodes are stored in the same key space, and in a circle. Object with a key k is located in the sucessor node of k, similar to how in consistent hashing the page with a certain name would be stored in the next server following the circle clockwise. This has the advantage of diminuishing the amount of content that moves when a new node joins the key space.

To discover the IP address of a node, since each node only knows the successor, to increase efficiency it is used chord finger table routing. 

To allow faster traversal of the network, a node stores a table of M entries for a key space with M bits. They have more information about closer peers, and this way they can travel half the distance to the farthest node. 

Chord connectivities relies on successor pointers. 
- Successors are correct -> lookup correct;
- Successors are partially incorrect -> lookup longer but correct;
- Successors are out-of-date -> lookup may fail;

Protocol periodically checks if successor pointers are up-to-date to mitigate this.

Chord join:
Update successor, predecessor and finger of new node -> update finger tables -> update contents of new node.

Basically there are nodes 1 and 3. If 2 wants to join, it must say that 1 is the new predecessor of 2, 2 is the new predecessor of 3, and 3 is the new sucessor of 2.

Update finger tables complexity is O(logN)^2.

Unstructured P2P Overlays:
- Nearly random topology;
- Peers join and leave according to small set of rules;
- Content availability depends on node availability;
- Unreliable search
- Load on each peer grows with number of queries.

Improve Gnutella search:
- Limit search depth and number of neighbours to whom QUERY is forwarded;
- Replicate content to increase efficiency of queries and delivery (problems with data consistency and synchronisation);
- Indices at nodes store location of nearby contents;



